#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'

# ---------------- Ensure PATH ----------------
export PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$PATH"

# ---------------- Colors ----------------
BLUE="\e[94m"; GREEN="\e[92m"; YELLOW="\e[93m"; RED="\e[91m"; RESET="\e[0m"; BOLD="\e[1m"; CYAN="\033[0;36m"; HIGH_GREEN="\e[38;5;82m";
VER=v0.1

# ---------------- Variables ----------------
REPO_URL="https://github.com/ghost11411/scout"
INSTALL_DIR="/root/scout"
FORCE=false
UPDATE=false
LOG_FILE="/tmp/scout_configure.log"
touch "$LOG_FILE"
: > "$LOG_FILE"

# ---------------- ASCII BANNER ----------------
BANNER(){
  ASCII_SCOUT=$(cat <<'EOF'
    /$$$$$$   /$$$$$$   /$$$$$$  /$$   /$$ /$$$$$$$$
   /$$__  $$ /$$__  $$ /$$__  $$| $$  | $$|__  $$__/
  | $$  \__/| $$  \__/| $$  \ $$| $$  | $$   | $$   
  |  $$$$$$ | $$      | $$  | $$| $$  | $$   | $$   
   \____  $$| $$      | $$  | $$| $$  | $$   | $$   
   /$$  \ $$| $$    $$| $$  | $$| $$  | $$   | $$   
  |  $$$$$$/|  $$$$$$/|  $$$$$$/|  $$$$$$/   | $$   
   \______/  \______/  \______/  \______/    |__/   
EOF
  )
  local tag="${VER:-v?}"
  TAGLINE="Recon Made Easy                  Made By Ghost ${tag}"

  echo -e "${BOLD}${GREEN}=====================================================${RESET}"
  echo -e "${HIGH_GREEN}${BOLD}${ASCII_SCOUT}${RESET}"
  echo -e "${CYAN}${BOLD}${TAGLINE}${RESET}"
  echo -e "${BOLD}${GREEN}=====================================================${RESET}"
}

# ---------------- Messages ----------------
OK()      { printf "${GREEN}[âœ”] %s${RESET}\n" "$1"; }
INFO()    { printf "${BLUE}[*] %s${RESET}\n" "$1"; }
WARN()    { printf "${YELLOW}[!] %s${RESET}\n" "$1"; }
ERR()     { printf "${RED}[âœ˜] %s${RESET}\n" "$1" >> "$LOG_FILE"; }

# ---------------- Parse Arguments ----------------
for arg in "$@"; do
    case "$arg" in
        --force) FORCE=true ;;
        --update) UPDATE=true ;;
        *)
            ERR "Unknown option: $arg"
            echo "Usage: configure [--force | --update]"
            exit 1
            ;;
    esac
done

# ---------------- Start Installation ----------------
BANNER
INFO "Starting Scout installation..."

# ---------------- CHECK ROOT ----------------
if [ "$EUID" -ne 0 ]; then
  ERR "Please run as root (sudo ./configure)"
  exit 1
fi

# ---------------- Handle Flags ----------------
if [ "$FORCE" = true ] && [ "$UPDATE" = true ]; then
    ERR "--force and --update cannot be used together."
    exit 1

elif [ "$FORCE" = true ]; then
    WARN "--force flag detected..."
    if [ -d "$INSTALL_DIR" ]; then
        INFO "Removing existing installation at $INSTALL_DIR..."
        rm -rf "$INSTALL_DIR"
        OK "Removed $INSTALL_DIR"
    fi

    INFO "Cloning fresh repository..."
    git clone "$REPO_URL" "$INSTALL_DIR" >/dev/null 2>&1 || {
        ERR "Failed to clone repository. Check your network connection."
        exit 1
    }
    OK "Cloned repository to $INSTALL_DIR"

elif [ "$UPDATE" = true ]; then
    WARN "--update flag detected..."
    if [ -d "$INSTALL_DIR/.git" ]; then
        cd "$INSTALL_DIR" || exit 1
        INFO "Updating existing repository..."
        git reset --hard >/dev/null 2>&1
        git pull --rebase --autostash >/dev/null 2>&1
        OK "Updated repository at $INSTALL_DIR"
    elif [ -d "$INSTALL_DIR" ]; then
        ERR "Directory $INSTALL_DIR exists but is not a Git repository. Use --force to reinstall."
        exit 1
    else
        ERR "No existing installation found. Use --force to perform a fresh install."
        exit 1
    fi

else
    WARN "No flags detected, proceeding with default behavior..."
    if [ -d "$INSTALL_DIR" ]; then
        if [ -d "$INSTALL_DIR/.git" ]; then
            ERR "Installation directory $INSTALL_DIR already exists. Use --update to update or --force to reinstall."
        else
            ERR "Directory $INSTALL_DIR exists but is not a Git repository. Use --force to reinstall."
        fi
        exit 1
    fi

    INFO "Cloning repository to '$INSTALL_DIR'..."
    git clone "$REPO_URL" "$INSTALL_DIR" >/dev/null 2>&1 || {
        ERR "Failed to clone repository. Check your network connection."
        exit 1
    }
    OK "Cloned repository to $INSTALL_DIR"
fi


# ---------------- Permissions ----------------
INFO "Setting executable permissions for scripts..."
find "$INSTALL_DIR" -type f -exec chmod +x {} \; || {
    ERR "Failed to set permissions. Check your permissions."
    exit 1
}

# ---------------- Locate Installer ----------------
INFO "Searching for installer script..."
INSTALLER_PATH=$(find "$INSTALL_DIR" -type f -name "temp_installer" | head -n 1 || true)
INFO "Installer script found at: $INSTALLER_PATH"

if [ -z "$INSTALLER_PATH" ]; then
    ERR "Installer script not found in repository."
    exit 1
fi

# ---------------- Run Installer ----------------
if [ -x "$INSTALLER_PATH" ]; then
    INFO "Running installer script..."
    "$INSTALLER_PATH" || {
        ERR "Installer script failed. Check the logs above."
        exit 1
    }
else
    ERR "Installer script is not executable."
    exit 1
fi

# ---------------- Summary ----------------
OK "Scout installation completed successfully!"
echo -e "Type ${BOLD}${CYAN}scout${RESET} to get started."
echo -e "For help, type ${BOLD}${CYAN}scout --help${RESET} or visit the GitHub repository: ${BOLD}${CYAN}${REPO_URL}${RESET}"
OK "Happy Recon! ðŸ”Ž"
